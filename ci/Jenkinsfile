pipeline {
  agent {
    kubernetes {
    defaultContainer 'podman'
    yaml '''
---
apiVersion: v1
kind: Pod
metadata:
  namespace: "jenkins"
spec:
  containers:
    - name: podman
      imagePullPolicy: Always
      image: quay.io/podman/stable:v3.4.4
      command:
        - sleep
      args:
        - 99d
      tty: true
      securityContext:
        privileged: true
      env:
        - name: REGISTRY_AUTH_FILE
          value: /tmp/auth.json
      volumeMounts:
        - mountPath: /var/lib/containers
          name: podman-volume
        - mountPath: /dev/shm
          name: devshm-volume
        - mountPath: /var/run
          name: varrun-volume
        - mountPath: /tmp/
          name: dockerhub
          readOnly: true
  restartPolicy: Never
  volumes:
    - name: podman-volume
      emptyDir: {}
    - emptyDir:
        medium: Memory
      name: devshm-volume
    - emptyDir: {}
      name: varrun-volume
    - name: dockerhub
      secret:
        secretName: dockerhub
        items:
          - key: .dockerconfigjson
            path: auth.json
      '''
      }
  }
  stages {
    stage('Podman Build') {
      steps {
        git url: 'https://github.com/SanabriaRusso/my_tests.git', branch: 'main'
        container('podman') {
          sh '''
            podman login docker.io
            podman --events-backend=file build -t sanabriarusso/hello-world:latest .
            podman push sanabriarusso/hello-world:latest
          '''
        }
      }
    }
  }
}